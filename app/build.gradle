apply plugin: 'com.android.application'

def testingTwaManifest = [
        applicationId              : 'app.passculture.testing.webapp',
        hostName                   : 'app.passculture-testing.beta.gouv.fr',
        name                       : 'pass Culture - Testing',
        splashScreenBackgroundColor: '#FFC22C',
]
def stagingTwaManifest = [
        applicationId              : 'app.passculture.staging.webapp',
        hostName                   : 'app.passculture-staging.beta.gouv.fr',
        name                       : 'pass Culture - Staging',
        splashScreenBackgroundColor: '#43DD67',
]
def prodTwaManifest = [
        applicationId              : 'app.passculture.webapp',
        hostName                   : 'app.passculture.beta.gouv.fr',
        name                       : 'pass Culture',
        splashScreenBackgroundColor: '#EB0055',
]

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "app.passculture"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 8
        versionName "Add staging build variant"

        resValue "bool", "enableNotification", "false"
        resValue "color", "colorPrimary", "#FFFFFF"
        resValue "color", "navigationColor", "#000000"
        resValue "integer", "splashScreenFadeOutDuration", "300"
        resValue "string", "fallbackType", "customtabs"
    }

    buildTypes {
        debug {
            debuggable false

            applicationIdSuffix ".testing.webapp"
            resValue "string", "appName", testingTwaManifest.name
            resValue "string", "launcherName", testingTwaManifest.name
            resValue "string", "hostName", testingTwaManifest.hostName

            def launchUrl = "https://" + testingTwaManifest.hostName + "/"
            resValue "string", "launchUrl", launchUrl

            def webManifestUrl = "https://" + testingTwaManifest.hostName + "/manifest.json"
            resValue "string", "webManifestUrl", webManifestUrl

            // This variable below expresses the relationship between the app and the site,
            // as documented in the TWA documentation at
            // https://developers.google.com/web/updates/2017/10/using-twa#set_up_digital_asset_links_in_an_android_app
            // and is injected into the AndroidManifest.xml
            resValue "string", "assetStatements",
                    '[{ \\"relation\\": [\\"delegate_permission/common.handle_all_urls\\"],' +
                            '\\"target\\": {\\"namespace\\": \\"web\\", \\"site\\": \\"https://' +
                            testingTwaManifest.hostName + '\\"}}]'

            resValue "color", "backgroundColor", testingTwaManifest.splashScreenBackgroundColor
            resValue "string", "providerAuthority", testingTwaManifest.applicationId + '.fileprovider'
        }

        staging {
            minifyEnabled true

            applicationIdSuffix ".staging.webapp"
            resValue "string", "appName", stagingTwaManifest.name
            resValue "string", "launcherName", stagingTwaManifest.name
            resValue "string", "hostName", stagingTwaManifest.hostName

            def launchUrl = "https://" + stagingTwaManifest.hostName + "/"
            resValue "string", "launchUrl", launchUrl

            def webManifestUrl = "https://" + stagingTwaManifest.hostName + "/manifest.json"
            resValue "string", "webManifestUrl", webManifestUrl

            // This variable below expresses the relationship between the app and the site,
            // as documented in the TWA documentation at
            // https://developers.google.com/web/updates/2017/10/using-twa#set_up_digital_asset_links_in_an_android_app
            // and is injected into the AndroidManifest.xml
            resValue "string", "assetStatements",
                    '[{ \\"relation\\": [\\"delegate_permission/common.handle_all_urls\\"],' +
                            '\\"target\\": {\\"namespace\\": \\"web\\", \\"site\\": \\"https://' +
                            stagingTwaManifest.hostName + '\\"}}]'

            resValue "color", "backgroundColor", stagingTwaManifest.splashScreenBackgroundColor
            resValue "string", "providerAuthority", stagingTwaManifest.applicationId + '.fileprovider'
        }

        release {
            minifyEnabled true

            applicationIdSuffix ".webapp"
            resValue "string", "appName", prodTwaManifest.name
            resValue "string", "launcherName", prodTwaManifest.name
            resValue "string", "hostName", prodTwaManifest.hostName

            def launchUrl = "https://" + prodTwaManifest.hostName + "/"
            resValue "string", "launchUrl", launchUrl

            def webManifestUrl = "https://" + prodTwaManifest.hostName + "/manifest.json"
            resValue "string", "webManifestUrl", webManifestUrl

            // This variable below expresses the relationship between the app and the site,
            // as documented in the TWA documentation at
            // https://developers.google.com/web/updates/2017/10/using-twa#set_up_digital_asset_links_in_an_android_app
            // and is injected into the AndroidManifest.xml
            resValue "string", "assetStatements",
                    '[{ \\"relation\\": [\\"delegate_permission/common.handle_all_urls\\"],' +
                            '\\"target\\": {\\"namespace\\": \\"web\\", \\"site\\": \\"https://' +
                            prodTwaManifest.hostName + '\\"}}]'

            resValue "color", "backgroundColor", prodTwaManifest.splashScreenBackgroundColor
            resValue "string", "providerAuthority", prodTwaManifest.applicationId + '.fileprovider'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'com.google.androidbrowserhelper:androidbrowserhelper:1.3.1'
}
